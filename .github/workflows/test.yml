name: Test

on:
  push:
    branches:
      - master
      - main
    paths-ignore:
      - "**/*.md"
  pull_request:
    paths-ignore:
      - "**/*.md"

jobs:
  unit:
    strategy:
      matrix:
        go-version: [1.25.x]
        platform: [ubuntu-latest, windows-latest, macos-latest, macos-13]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Fetch Repository
        uses: actions/checkout@v5

      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go-version }}

      - name: Test
        run: go run gotest.tools/gotestsum@latest -f testname -- ./... -race -count=1 -coverprofile=coverage.txt -covermode=atomic -shuffle=on

      - name: Upload coverage reports to Codecov
        if: ${{ matrix.platform == 'ubuntu-latest' && matrix.go-version == '1.25.x' }}
        uses: codecov/codecov-action@v5.5.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: unittests
          slug: gofiber/fiber
          verbose: true

  repeated:
    name: repeated (group ${{ matrix.group }})
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJSON(github.event_name == 'pull_request' && '{"group":[0,1,2,3,4]}' || '{"group":[0]}') }}
    steps:
      - name: Fetch Repository
        uses: actions/checkout@v5

      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: stable

      - name: Test
        run: |
          PKGS=$(go list ./... | sort)
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            PKGS=$(echo "$PKGS" | awk '((NR-1)%5)==${{ matrix.group }}')
          fi
          PKGS=$(echo "$PKGS" | tr '\n' ' ')
          go run gotest.tools/gotestsum@latest -f testname -- $PKGS -race -count=15 -shuffle=on
